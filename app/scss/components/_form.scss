.position {
    display: block !important;
}

// Floating Labels
.form-group {
    position: relative;
    margin-bottom: 25px;
}

.form-group .form-control {
    transition: all .2s ease-out;
    width: 100%;
    height: 50px;
    font-weight: normal;
    &.smaller {
        height: 35px;
    }
    &.textarea {
        height: auto !important;
    }
}

span.ml-2.small {
    font-weight: bold;
}

.form-text {
    &.customized {
        background: $light-blue-color;
        text-align: center;
        padding: 10px 5px;
        line-height: 1;
        margin: 0;
        color: $black-color !important;
    }
}

.form-select {
    width: 100% !important;
    .btn {
        @extend .form-control;
        transition: all .2s ease-out;
        width: 100%;
        height: 50px;
        font-weight: 500;
        &:hover,
        &:focus,
        &:active {
            background: transparent !important;
        }
    }
}

.form-select .filter-option-inner {
    height: 100%;
}

.form-select .filter-option-inner {
    display: flex;
    align-items: center;
}

/*!
 * Float Labels
 * @version: 3.3.5
 * @author: Paul Ryley (http://geminilabs.io)
 * @url: https://geminilabs.github.io/float-labels.js
 * @license: MIT
 */

.fl-form .fl-wrap {
    position: relative;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}



.fl-form input.fl-input:-moz-placeholder,
.fl-form select.fl-select:-moz-placeholder,
.fl-form textarea.fl-textarea:-moz-placeholder {
    color:  lighten($black-color, 50%);
}

.fl-form input.fl-input::-moz-placeholder,
.fl-form select.fl-select::-moz-placeholder,
.fl-form textarea.fl-textarea::-moz-placeholder {
    color:  lighten($black-color, 50%);
}

.fl-form input.fl-input:-ms-input-placeholder,
.fl-form select.fl-select:-ms-input-placeholder,
.fl-form textarea.fl-textarea:-ms-input-placeholder {
    color:  lighten($black-color, 50%);
}

.fl-form input.fl-input::-webkit-input-placeholder,
.fl-form select.fl-select::-webkit-input-placeholder,
.fl-form textarea.fl-textarea::-webkit-input-placeholder {
    color:  lighten($black-color, 50%);
}

.fl-form select.fl-select {
    position: relative;
    color:  lighten($black-color, 50%);
    cursor: pointer;
    -webkit-appearance: none;
    -moz-appearance: none;
}

.fl-form select.fl-select::-ms-expand {
    display: none;
}

.fl-form .fl-is-active input.fl-input,
.fl-form .fl-is-active select.fl-select,
.fl-form .fl-is-active textarea.fl-textarea {
    color: #444;
    background-color: #fff;
}

.fl-form .fl-has-focus input.fl-input,
.fl-form .fl-has-focus select.fl-select,
.fl-form .fl-has-focus textarea.fl-textarea {
    background-color: #fff;
}

.fl-form label.fl-label {
    opacity: 0;
    visibility: hidden;
    display: block;
    position: absolute;
    top: -12px;
    left: 0;
    font-size: 12px;
    font-weight: 600;
    line-height: 1;
    color: lighten($black-color, 50%);
    transition: all 0.2s ease-in-out;
    z-index: 1;
}

.fl-form .fl-is-active label.fl-label {
    opacity: 1;
    visibility: visible;
}

.fl-form .fl-has-focus label.fl-label {
    color: #1976D2;
}

// .fl-form .fl-is-required:before {
//     opacity: 1;
//     content: '*';
//     display: block;
//     position: absolute;
//     top: 1px;
//     right: 15px;
//     font-size: 16px;
//     line-height: 1.75;
//     color: #D32F2F;
//     transition: all 0.2s ease-in-out;
//     padding: 6px 0 0;
//     z-index: 1;
// }

.fl-form .fl-is-required.fl-is-active:before {
    opacity: 0;
}

.fl-form.fl-style-1 input.fl-input,
.fl-form.fl-style-1 select.fl-select,
.fl-form.fl-style-1 textarea.fl-textarea {
    padding: 6px 12px;
}

.fl-form.fl-style-1 select.fl-select {
    height: 38px;
}

.fl-form.fl-style-1 .fl-is-active input.fl-input,
.fl-form.fl-style-1 .fl-is-active select.fl-select,
.fl-form.fl-style-1 .fl-is-active textarea.fl-textarea {
    padding: 6px 12px;
}

.fl-form.fl-style-1 label.fl-label {
    top: 1px;
    left: 10px;
    background-color: transparent;
    padding: 12px 3px;
}

.fl-form.fl-style-1 label.fl-label:before {
    content: '';
    display: block;
    position: absolute;
    top: 19px;
    left: 0;
    right: 0;
    height: 1px;
    background-color: #fff;
    z-index: -1;
}

.fl-form.fl-style-1 .fl-is-active label.fl-label {
    top: -9px;
    padding: 3px;
}

.fl-form.fl-style-1 .fl-is-active label.fl-label:before {
    top: 9px;
}

.fl-form.fl-style-2 input.fl-input,
.fl-form.fl-style-2 select.fl-select,
.fl-form.fl-style-2 textarea.fl-textarea {
    padding: 12px;
}

.fl-form.fl-style-2 select.fl-select {
    height: 50px;
}

.fl-form.fl-style-2 .fl-is-active input.fl-input,
.fl-form.fl-style-2 .fl-is-active select.fl-select,
.fl-form.fl-style-2 .fl-is-active textarea.fl-textarea {
    padding: 18px 12px 6px;
}

.fl-form.fl-style-2 label.fl-label {
    top: 1px;
    left: 10px;
    padding: 6px 3px 3px;
}

.fl-form.fl-style-2 .fl-is-required:before {
    padding-top: 12px;
}

.fl-form .fl-wrap-select:after {
    content: '';
    position: absolute;
    display: block;
    top: 1px;
    right: 6px;
    height: calc(100% - 2px);
    width: 12px;
    background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 16'%3E%3Cpath fill='%23bbb' d='M 4 0 L 0 6.5 L 8 6.5 L 4 0 z M 0 9.5 L 4 16 L 4 16 L 8 9.5 z'/%3E%3C/svg%3E") no-repeat;
    background-position: 100% 50%;
    background-size: 7px 14px;
    z-index: 2;
}

.btn-group.btn-group-toggle.long-list {
    @media(max-width: 768px) {
        flex-direction: column;
        display: flex;
    }
}

// Custom radio

.d-block.mx-auto.radio {
    width: 20px;
}

span.customRadio, span.customCheckbox {
    display: none;
}

input[type="radio"] {
    width: 16px;
    height: 16px;
    margin: 0;
    cursor: default;
    opacity: 0;
    border-color: red;
}

input[type="radio"] + span.customRadio {
    display: inline-block;
    width: 16px;
    height: 16px;
    background-color: white;
    margin: 0 0 0 -16px;
    border-radius: 50%;
    box-shadow: 0 0 0px 1px rgba(75, 128, 253, 1);
    pointer-events: none;
}
input[type="radio"] + span.customRadio::after {
    content: '.';
    color: transparent;
    position: absolute;
    display: block;
    width: 2px;
    height: 2px;
    margin: 7px 0 0 7px;
    opacity: 0.6;
    border-radius: 50%;
    transition: .2s;
}
input[type="radio"]:checked + span.customRadio::after {
    width: 10px;
    height: 10px;
    margin: 3px 0 0 3px;
    opacity: 1;
    background-color: #3388ff;
    box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.2);
}